<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="alz.user.mapper.UserMapper">

	

	<select id="selectAll" resultType="alz.user.domain.UserDTO">
		<![CDATA[
			SELECT
			users.id, email, nickName, password, role, certificationState, recentlogAt, modifiedAt, introduce, likeCnt, boardCnt, reservCnt, commentCnt, state, startAt, endAt 
			FROM
			alz_user users LEFT OUTER JOIN alz_user_state state on
			users.id = state.id
			WHERE users.id >= 0;
		]]>
	</select>

	<insert id="insert" parameterType="alz.user.domain.UserDTO">
	<selectKey keyProperty="id" order="BEFORE"
	resultType="long">
		SELECT alz_user_seq.nextval FROM dual
	</selectKey>
		INSERT INTO ALZ_USER (ID, EMAIL, NICKNAME, PASSWORD, ROLE, CERTIFICATIONSTATE, <!-- RECENTLOGAT, --><!--  MODIFIEDAT, --><!-- MODIFIEDAT, --> INTRODUCE)
		VALUES(#{id}, #{email}, #{nickName}, #{password}, #{role}, #{certificationState}, <!-- sysdate, --> <!-- #{modifiedAt}, --><!-- sysdate, --> #{introduce})
	
		INSERT INTO ALZ_USER_STATE(STATE, STARTAT, <!-- ENDAT, --> ENDAT)
		VALUES(#{state},#{startAt}, <!-- sysdate, --> #{endAt})
	</insert>
	
	
	<!-- 값을 다 넣을 때  -->
<!-- 	<insert id="insert" parameterType="alz.user.domain.UserDTO">
	<selectKey keyProperty="id" order="BEFORE"
	resultType="long">
		SELECT alz_user_seq.nextval FROM dual
	</selectKey>
		INSERT INTO ALZ_USER (ID, EMAIL, NICKNAME, PASSWORD, ROLE, CERTIFICATIONSTATE, RECENTLOGAT, MODIFIEDAT,MODIFIEDAT, INTRODUCE, STATE,STARTAT, ENDAT, ENDAT)
		VALUES(#{id}, #{email}, #{nickName}, #{password}, #{role}, #{certificationState}, sysdate, #{modifiedAt},sysdate, #{introduce}, #{likeCnt}, #{boardCnt}, #{reservCnt}, #{commentCnt}, #{state},#{startAt}, sysdate, #{endAt})
	</insert> -->


	<select id="selectById" resultType="alz.user.domain.UserDTO">
		SELECT
		users.id, email, nickName, password, role, certificationState, recentlogAt, modifiedAt, introduce, likeCnt, boardCnt, reservCnt, commentCnt, state, startAt, endAt 
		FROM
		alz_user users LEFT OUTER JOIN alz_user_state state on
		users.id = state.id
		WHERE users.id = #{id}
	</select>
	
	<!-- 값을 다 넣을 때  -->
	<!-- <select id="selectById" resultType="alz.user.domain.UserDTO">
		SELECT * FROM alz_user WHERE id = #{id}
	</select> -->
	
	<select id="selectByEmail" resultType="alz.user.domain.UserDTO">
		SELECT
		users.id, email, nickName, password, role, certificationState, recentlogAt, modifiedAt, introduce, likeCnt, boardCnt, reservCnt, commentCnt, state, startAt, endAt 
		FROM
		alz_user users LEFT OUTER JOIN alz_user_state state on
		users.id = state.id
		WHERE users.email = #{email}
	</select>

	<update id="updatedById">
		UPDATE alz_user
		SET nickName = #{nickName},
		password = #{password},
		role = #{role},
		certificationState = #{certificationState},
		<!-- recentlogAt = sysdate, --> <!-- 디폴트값이 시스데이트 이므로 필요없음 -->
		<!-- modifiedAt = sysdate, --> <!-- 디폴트값이 시스데이트 이므로 필요없음 -->
		<!-- modifiedAt = #{modifiedAt}, --> <!-- 직접 값을 넣고 싶으면 활성화 -->
		introduce = #{introduce}
		WHERE id = #{id}
		
		
		UPDATE alz_user_state
		SET state = #{state},
		startAt = sysdate, 
		endAt = sysdate,
		<!-- endAt = #{endAt} --> <!-- 직접 값을 넣고 싶으면 활성화 -->
		WHERE id = #{id}
	</update>
	
	<!-- 값을 다 넣을 때  -->
<!-- 	<update id="updatedById">   
		UPDATE alz_user
		SET nickName = #{nickName},
		password = #{password},
		role = #{role},
		certificationState = #{certificationState},
		recentlogAt = sysdate, 디폴트값이 시스데이트 이므로 필요없음
		modifiedAt = sysdate,
		modifiedAt = #{modifiedAt}, 직접 값을 넣고 싶으면 활성화
		introduce = #{introduce},
		likeCnt = #{likeCnt},
		boardCnt = #{boardCnt},
		reservCnt = #{reservCnt},
		commentCnt = #{commentCnt},
		state = #{state},
		startAt = sysdate, 
		endAt = sysdate,
		endAt = #{endAt} 직접 값을 넣고 싶으면 활성화
		
		WHERE id = #{id}
	</update> -->

	<delete id="deleteById">
		DELETE FROM alz_user WHERE id = #{id}
		DELETE FROM alz_user_state WHERE id = #{id}
	</delete>
</mapper>